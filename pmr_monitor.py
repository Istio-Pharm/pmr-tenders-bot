
import requests
from bs4 import BeautifulSoup
import time
import json
import datetime
import logging

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
URL = "https://zakupki.gospmr.org/zakupki/?sbj=–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ+–∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"
ID_THRESHOLD = 9338  # –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º ID –≤—ã—à–µ —ç—Ç–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
TELEGRAM_BOT_TOKEN = "8044532856:AAFAqtS9-lRodpBkKvochtoXioOxJCBWxWE"
TELEGRAM_CHAT_ID = "442183644"
HEADERS = {"User-Agent": "Mozilla/5.0"}

# --- –õ–û–ì–ò ---
logging.basicConfig(
    filename='monitor_log.txt',
    level=logging.INFO,
    format='[%(asctime)s] %(levelname)s - %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
)

def get_tender_info():
    """–ü–∞—Ä—Å–∏–º —Ç–∞–±–ª–∏—Ü—É –∑–∞–∫—É–ø–æ–∫ –Ω–∞ —Å–∞–π—Ç–µ –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º ID, –ø—Ä–µ–¥–º–µ—Ç –∏ —Ü–µ–Ω—É"""
    try:
        response = requests.get(URL, headers=HEADERS, timeout=15)
        response.encoding = "utf-8"
        soup = BeautifulSoup(response.text, "html.parser")

        rows = soup.select("table.table tr")[1:]  # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        tenders = []
        for row in rows:
            cols = row.find_all("td")
            if len(cols) < 6:
                continue
            try:
                tender_id = int(cols[0].text.strip())
                subject = cols[2].text.strip()
                price = cols[-1].text.strip()
                tenders.append({
                    "id": tender_id,
                    "subject": subject,
                    "price": price
                })
            except:
                continue
        return tenders
    except Exception as exc:
        logging.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–Ω–¥–µ—Ä–æ–≤: %s", exc)
        return []

def load_last_seen_ids():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º —É–∂–µ —É–≤–∏–¥–µ–Ω–Ω—ã–µ ID –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open("last_seen_ids.json", "r") as f:
            return json.load(f)
    except:
        return []

def save_last_seen_ids(ids):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º ID, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã"""
    with open("last_seen_ids.json", "w") as f:
        json.dump(ids, f)

def send_telegram_message(text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        payload = {
            "chat_id": TELEGRAM_CHAT_ID,
            "text": text,
            "parse_mode": "HTML"
        }
        r = requests.post(url, data=payload)
        if r.status_code != 200:
            logging.error("–û—à–∏–±–∫–∞ Telegram: %s", r.text)
    except Exception as exc:
        logging.error("Telegram –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: %s", exc)

def is_working_time():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º: —Å–µ–π—á–∞—Å —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –∏–ª–∏ –Ω–µ—Ç"""
    now = datetime.datetime.now()
    return now.weekday() < 5 and 8 <= now.hour < 19

def main():
    print("üì¶ –ó–∞–ø—É—â–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–µ–Ω–¥–µ—Ä–æ–≤ –ú–∏–Ω–∑–¥—Ä–∞–≤–∞ –ü–ú–†...")
    logging.info("–°–∫—Ä–∏–ø—Ç —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª.")
    tenders = get_tender_info()
    if not is_working_time():
        print("‚è≥ –í–Ω–µ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (8:00‚Äì19:00, –ü–Ω‚Äì–ü—Ç). –ù–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º.")
        logging.info("–ü—Ä–æ–ø—É—Å–∫ ‚Äî –≤–Ω–µ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.")
        return

    last_seen_ids = load_last_seen_ids()
    new_tenders = [t for t in tenders if t["id"] > ID_THRESHOLD and t["id"] not in last_seen_ids]

    if new_tenders:
        for tender in new_tenders:
            message = f"üÜï –ù–æ–≤–∞—è –∑–∞–∫—É–ø–∫–∞ –æ—Ç –ú–∏–Ω–∑–¥—Ä–∞–≤–∞ –ü–ú–†\n"                       f"üÜî ID: {tender['id']}\n"                       f"üìÑ –ü—Ä–µ–¥–º–µ—Ç: {tender['subject']}\n"                       f"üí∞ –¶–µ–Ω–∞: {tender['price']}\n"                       f"üîó https://zakupki.gospmr.org/purchase/?id={tender['id']}"
            print(f"üì® –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ID {tender['id']}")
            send_telegram_message(message)
            logging.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± ID %s", tender['id'])
        save_last_seen_ids(last_seen_ids + [t["id"] for t in new_tenders])
    else:
        print("‚ÑπÔ∏è –ù–æ–≤—ã—Ö –∑–∞–∫—É–ø–æ–∫ –Ω–µ—Ç.")
        logging.info("–ù–æ–≤—ã—Ö –∑–∞–∫—É–ø–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

if __name__ == "__main__":
    main()
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
